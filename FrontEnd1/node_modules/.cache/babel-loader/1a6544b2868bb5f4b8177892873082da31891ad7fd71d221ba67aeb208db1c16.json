{"ast":null,"code":"import React, { Component } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport axios from 'axios';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nconst formatDate = dateTimeString => {\n  const date = new Date(dateTimeString);\n  return date.toISOString().split(\"T\")[0]; // Get only the date part\n};\n\nexport class Bootstraptab1 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      enquiry: [],\n      // Initial empty array\n      columns: [{\n        dataField: 'enquiry_id',\n        text: 'Enq.Id',\n        sort: true,\n        headerStyle: () => {\n          return {\n            textAlign: 'center'\n          }; // Center align header content\n        }\n      }, {\n        filter: textFilter(),\n        dataField: 'enquirer_name',\n        text: 'Enquirer Name',\n        sort: true,\n        headerStyle: () => {\n          return {\n            textAlign: 'center'\n          };\n        }\n      }, {\n        dataField: 'student_name',\n        text: 'Student Name',\n        sort: true,\n        headerStyle: () => {\n          return {\n            textAlign: 'center'\n          };\n        }\n      }, {\n        dataField: 'enquirer_mobile',\n        text: 'Phone',\n        sort: true,\n        headerStyle: () => {\n          return {\n            textAlign: 'center'\n          };\n        }\n      }, {\n        dataField: 'follow_up_date',\n        text: 'Follow-up Date',\n        formatter: formatDate,\n        sort: true,\n        headerStyle: () => {\n          return {\n            textAlign: 'center'\n          };\n        }\n      }, {\n        dataField: 'enquirer_email_id',\n        text: 'Email',\n        sort: true,\n        headerStyle: () => {\n          return {\n            textAlign: 'center'\n          };\n        }\n      }]\n    };\n  }\n  // ... rest of the component code ...\n\n  render() {\n    // ... same as before ...\n  }\n}\nexport default Bootstraptab1;","map":{"version":3,"names":["React","Component","BootstrapTable","axios","filterFactory","textFilter","paginationFactory","formatDate","dateTimeString","date","Date","toISOString","split","Bootstraptab1","constructor","args","state","enquiry","columns","dataField","text","sort","headerStyle","textAlign","filter","formatter","render"],"sources":["D:/Github/ComputerSeekho/ComputerSeekho/FrontEnd1/src/demo.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport axios from 'axios';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\nconst formatDate = (dateTimeString) => {\r\n  const date = new Date(dateTimeString);\r\n  return date.toISOString().split(\"T\")[0]; // Get only the date part\r\n};\r\n\r\nexport class Bootstraptab1 extends Component {\r\n  state = {\r\n    enquiry: [], // Initial empty array\r\n    columns: [\r\n      {\r\n        dataField: 'enquiry_id',\r\n        text: 'Enq.Id',\r\n        sort: true,\r\n        headerStyle: () => {\r\n          return { textAlign: 'center' }; // Center align header content\r\n        },\r\n      },\r\n      {\r\n        filter: textFilter(),\r\n        dataField: 'enquirer_name',\r\n        text: 'Enquirer Name',\r\n        sort: true,\r\n        headerStyle: () => {\r\n          return { textAlign: 'center' };\r\n        },\r\n      },\r\n      {\r\n        dataField: 'student_name',\r\n        text: 'Student Name',\r\n        sort: true,\r\n        headerStyle: () => {\r\n          return { textAlign: 'center' };\r\n        },\r\n      },\r\n      {\r\n        dataField: 'enquirer_mobile',\r\n        text: 'Phone',\r\n        sort: true,\r\n        headerStyle: () => {\r\n          return { textAlign: 'center' };\r\n        },\r\n      },\r\n      {\r\n        dataField: 'follow_up_date',\r\n        text: 'Follow-up Date',\r\n        formatter: formatDate,\r\n        sort: true,\r\n        headerStyle: () => {\r\n          return { textAlign: 'center' };\r\n        },\r\n      },\r\n      {\r\n        dataField: 'enquirer_email_id',\r\n        text: 'Email',\r\n        sort: true,\r\n        headerStyle: () => {\r\n          return { textAlign: 'center' };\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  // ... rest of the component code ...\r\n\r\n  render() {\r\n    // ... same as before ...\r\n  }\r\n}\r\n\r\nexport default Bootstraptab1;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,IAAIC,UAAU,QAAQ,+BAA+B;AACzE,OAAOC,iBAAiB,MAAM,kCAAkC;AAEhE,MAAMC,UAAU,GAAIC,cAAc,IAAK;EACrC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,cAAc,CAAC;EACrC,OAAOC,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC;;AAED,OAAO,MAAMC,aAAa,SAASZ,SAAS,CAAC;EAAAa,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC3CC,KAAK,GAAG;MACNC,OAAO,EAAE,EAAE;MAAE;MACbC,OAAO,EAAE,CACP;QACEC,SAAS,EAAE,YAAY;QACvBC,IAAI,EAAE,QAAQ;QACdC,IAAI,EAAE,IAAI;QACVC,WAAW,EAAEA,CAAA,KAAM;UACjB,OAAO;YAAEC,SAAS,EAAE;UAAS,CAAC,CAAC,CAAC;QAClC;MACF,CAAC,EACD;QACEC,MAAM,EAAEnB,UAAU,CAAC,CAAC;QACpBc,SAAS,EAAE,eAAe;QAC1BC,IAAI,EAAE,eAAe;QACrBC,IAAI,EAAE,IAAI;QACVC,WAAW,EAAEA,CAAA,KAAM;UACjB,OAAO;YAAEC,SAAS,EAAE;UAAS,CAAC;QAChC;MACF,CAAC,EACD;QACEJ,SAAS,EAAE,cAAc;QACzBC,IAAI,EAAE,cAAc;QACpBC,IAAI,EAAE,IAAI;QACVC,WAAW,EAAEA,CAAA,KAAM;UACjB,OAAO;YAAEC,SAAS,EAAE;UAAS,CAAC;QAChC;MACF,CAAC,EACD;QACEJ,SAAS,EAAE,iBAAiB;QAC5BC,IAAI,EAAE,OAAO;QACbC,IAAI,EAAE,IAAI;QACVC,WAAW,EAAEA,CAAA,KAAM;UACjB,OAAO;YAAEC,SAAS,EAAE;UAAS,CAAC;QAChC;MACF,CAAC,EACD;QACEJ,SAAS,EAAE,gBAAgB;QAC3BC,IAAI,EAAE,gBAAgB;QACtBK,SAAS,EAAElB,UAAU;QACrBc,IAAI,EAAE,IAAI;QACVC,WAAW,EAAEA,CAAA,KAAM;UACjB,OAAO;YAAEC,SAAS,EAAE;UAAS,CAAC;QAChC;MACF,CAAC,EACD;QACEJ,SAAS,EAAE,mBAAmB;QAC9BC,IAAI,EAAE,OAAO;QACbC,IAAI,EAAE,IAAI;QACVC,WAAW,EAAEA,CAAA,KAAM;UACjB,OAAO;YAAEC,SAAS,EAAE;UAAS,CAAC;QAChC;MACF,CAAC;IAEL,CAAC;EAAA;EAED;;EAEAG,MAAMA,CAAA,EAAG;IACP;EAAA;AAEJ;AAEA,eAAeb,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}